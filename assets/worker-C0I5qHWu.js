(function(){"use strict";const C=(i,t)=>{const{width:a,height:n,data:r}=i,w=Math.ceil(a/t),k=Math.ceil(n/t),m=new Uint8Array(Math.ceil(a/t)*Math.ceil(n/t));let d=0;for(let x=0;x<n;x+=t)for(let y=0;y<a;y+=t){let g=!1;for(let f=0;f<t&&!g;f++)for(let u=0;u<t&&!g;u++){const p=y+u,T=x+f;if(p<a&&T<n){const H=(T*a+p)*4;r[H+3]>10&&(g=!0)}}m[d++]=g?1:0}return{validBlocks:m,blockWidth:w,blockHeight:k}},I=(i,t)=>{const e=Math.ceil(i),a=Math.floor(t);return Math.floor(Math.random()*(a-e)+e)};let B=[],M,h,c,l,s,R,o,F;const Y=async i=>{s=i,R=s.getContext("bitmaprenderer"),c=new OffscreenCanvas(s.width,s.height),l=c.getContext("2d",{willReadFrequently:!0})},A=async i=>{const{imageBitmap:t,canvas:e,dimensions:a,particleRadius:n}=i;M=t,o=n,Y(e),l.drawImage(M,0,0);const{validBlocks:r,blockHeight:w,blockWidth:k}=C(l.getImageData(0,0,s.width,s.height),o);B=v({validBlocks:r,dimensions:a,radius:o,blockHeight:w,blockWidth:k})},b=()=>{let i=!0;l.clearRect(0,0,c.width,c.height),B.forEach(e=>{F(e),l.drawImage(M,e.targetX,e.targetY,o,o,Math.floor(e.x),Math.floor(e.y),o,o),(e.x!==e.targetX||e.y!==e.targetY)&&(i=!1)});const t=c.transferToImageBitmap();R.transferFromImageBitmap(t),i?(self.postMessage({type:"particlesReachedTarget"}),h&&cancelAnimationFrame(h)):h=requestAnimationFrame(b)};self.onmessage=i=>{const{data:t,type:e}=i.data;switch(e){case"initialize":{A(t),self.postMessage({type:"initialized"});break}case"resizeParticleRadius":{o=t.particleRadius,l.drawImage(M,0,0);const{validBlocks:a,blockHeight:n,blockWidth:r}=C(l.getImageData(0,0,s.width,s.height),o);B=v({validBlocks:a,dimensions:{width:s.width,height:s.height},radius:o,blockHeight:n,blockWidth:r}),h&&(cancelAnimationFrame(h),b());break}case"play":{F=new Function(t.code)(),b();break}case"reset":{B.forEach(n=>{n.x=I(0,s.width),n.y=I(0,s.height)}),l.clearRect(0,0,c.width,c.height);const a=c.transferToImageBitmap();R.transferFromImageBitmap(a),h&&cancelAnimationFrame(h);break}}};const v=({validBlocks:i,dimensions:t,radius:e,blockHeight:a,blockWidth:n})=>{const r=[],{width:w,height:k}=t;for(let m=0;m<a;m++)for(let d=0;d<n;d++){const x=m*n+d;if(i[x]){const y=d*e,g=m*e,f=I(0,w),u=I(0,k);r.push({targetX:y,targetY:g,x:f,y:u,initialX:f,initialY:u})}}return console.log("Particles amount: ",r.length),r}})();
