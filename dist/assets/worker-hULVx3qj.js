(function(){"use strict";var T=(t=>(t.INITIALIZE="INITIALIZE",t.PLAY="PLAY",t.RESET="RESET",t.RESIZE_PARTICLE_RADIUS="RESIZE_PARTICLE_RADIUS",t.UPDATE_START_POSITION="UPDATE_START_POSITION",t))(T||{});const v=(t,e)=>{const{width:i,height:a,data:o}=t,n=Math.ceil(i/e),l=Math.ceil(a/e),I=new Uint8Array(Math.ceil(i/e)*Math.ceil(a/e));let C=0;for(let E=0;E<a;E+=e)for(let x=0;x<i;x+=e){let h=!1;for(let b=0;b<e&&!h;b++)for(let B=0;B<e&&!h;B++){const H=x+B,L=E+b;if(H<i&&L<a){const D=(L*i+H)*4;o[D+3]>10&&(h=!0)}}I[C++]=h?1:0}return{validBlocks:I,blockWidth:n,blockHeight:l}},O=({dimensions:{width:t,height:e}})=>({top:()=>({x:Math.random()*t,y:0}),center:()=>({x:Math.round(t/2),y:Math.round(e/2)}),bottom:()=>({x:Math.random()*t,y:e}),random:()=>({x:Math.random()*t,y:Math.random()*e}),left:()=>({x:0,y:Math.random()*e}),right:()=>({x:t,y:Math.random()*e}),"top-left":()=>({x:Math.random()*(t/5),y:Math.random()*(e/5)}),"top-right":()=>({x:t,y:Math.random()*(e/5)}),"bottom-left":()=>({x:Math.random()*(t/5),y:e-Math.random()*(e/5)}),"bottom-right":()=>({x:t-Math.random()*(t/5),y:e-Math.random()*(e/5)})});let g=[],R,c,m,d,f,_,s,u,k,M,y,Y,P;const S=async t=>{f=t,_=f.getContext("bitmaprenderer"),m=new OffscreenCanvas(f.width,f.height),d=m.getContext("2d",{willReadFrequently:!0})},p=async t=>{const{imageBitmap:e,canvas:r,dimensions:i,particleRadius:a}=t;R=e,s=a,y=t.startPosition,S(r),d.drawImage(R,0,0);const{validBlocks:o,blockHeight:n,blockWidth:l}=v(d.getImageData(0,0,f.width,f.height),s);u=o,k=n,M=l,P=O({dimensions:i}),g=F({validBlocks:u,radius:s,blockHeight:k,blockWidth:M,startPosition:y})},A=(t,e)=>{let r=!0;d.clearRect(0,0,m.width,m.height),g.forEach(a=>{Y(a,t,e),d.drawImage(R,a.targetX,a.targetY,s,s,Math.floor(a.x),Math.floor(a.y),s,s),(a.x!==a.targetX||a.y!==a.targetY)&&(r=!1)});const i=m.transferToImageBitmap();_.transferFromImageBitmap(i),r?(self.postMessage({type:"particlesReachedTarget"}),c&&cancelAnimationFrame(c)):c=requestAnimationFrame(a=>A(t,a))};self.onmessage=t=>{const e={[T.INITIALIZE]:a=>{p(a),self.postMessage({type:"initialized"})},[T.PLAY]:a=>{Y=new Function(a.code)();const o=performance.now();A(o,o)},[T.RESET]:()=>{g.forEach(o=>{const n=P[y]();o.initialX=n.x,o.initialY=n.y,o.x=n.x,o.y=n.y}),d.clearRect(0,0,m.width,m.height);const a=m.transferToImageBitmap();_.transferFromImageBitmap(a),c&&cancelAnimationFrame(c)},[T.RESIZE_PARTICLE_RADIUS]:a=>{s=a.particleRadius,d.drawImage(R,0,0);const{validBlocks:o,blockHeight:n,blockWidth:l}=v(d.getImageData(0,0,f.width,f.height),s);if(u=o,k=n,M=l,g=F({validBlocks:u,radius:s,blockHeight:k,blockWidth:M,startPosition:y}),c){cancelAnimationFrame(c);const I=performance.now();A(I,I)}},[T.UPDATE_START_POSITION]:a=>{if(y=a.startPosition,g.length){if(g.forEach(o=>{const n=P[a.startPosition]();o.initialX=n.x,o.initialY=n.y,o.x=n.x,o.y=n.y}),c){cancelAnimationFrame(c);const o=performance.now();A(o,o)}}else console.error("updateStartPosition failed, particles were not initialized",{workerParticles:g})}},{data:r,type:i}=t.data;e[i](r)};const F=({validBlocks:t,radius:e,blockHeight:r,blockWidth:i,startPosition:a})=>{const o=[];for(let n=0;n<r;n++)for(let l=0;l<i;l++){const I=n*i+l;if(t[I]){const C=l*e,E=n*e,{x,y:h}=P[a]();o.push({targetX:C,targetY:E,x,y:h,initialX:x,initialY:h})}}return console.log("Particles amount: ",o.length),o}})();
